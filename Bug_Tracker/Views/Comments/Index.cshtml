@using Bug_Tracker.Authorization
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity

@inject IAuthorizationService _authorizationService
@inject UserManager<IdentityUser> _userManager

@model IEnumerable<Bug_Tracker.Models.Comment>

<h2>@ViewData["TicketTitle"]</h2>
<br />
<h3>Comments</h3>
<br />
<p>
    <a asp-action="Create" asp-route-ticketId="@ViewData["TicketId"]" class="btn btn-primary">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Text)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>Owner</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Text)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @await _userManager.FindByIdAsync(item.OwnerId)
            </td>
            <td>
                @if ((await _authorizationService.AuthorizeAsync(User, item, CommentOperationAuthorizationRequirements.Update)).Succeeded)
                {
                    <a asp-action="Edit" asp-route-id="@item.Id" asp-route-ticketId="@ViewData["TicketId"]">Edit</a>
                }
                &nbsp;
                @if ((await _authorizationService.AuthorizeAsync(User, item, CommentOperationAuthorizationRequirements.Delete)).Succeeded)
                {
                    <a asp-action="Delete" asp-route-id="@item.Id" asp-route-ticketId="@ViewData["TicketId"]">Delete</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>
<br />
<a asp-controller="Tickets" asp-action="Details" asp-route-id="@ViewData["TicketId"]" class="btn btn-outline-secondary"><< Back</a>
