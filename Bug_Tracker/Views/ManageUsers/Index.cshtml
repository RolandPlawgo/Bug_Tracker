@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> _userManager
@{
    ViewData["Title"] = "Users";
}
@model IEnumerable<Bug_Tracker.Models.ManageUsersViewModel>


<h2>Users</h2>
<br />
<br />
<form asp-action="Index" method="get" class="row row-cols-lg-auto row-cols-md-auto align-items-center">
    <div class="col-12">
        <label class="form-label">Search</label>
        <input type="text" name="searchString" value="@ViewData["SearchString"]" />
    </div>
    <div class="col-12">
        <label class="form-label">Role</label>
        <select name="roleFilter" class="form-select-sm">
            <option>any</option>
            @foreach (var item in (List<string>)ViewData["RoleNames"])
            {
                if (ViewData["RoleFilter"]?.ToString() == item)
                {
                    <option selected>@item</option>
                }
                else
                {
                    <option>@item</option>
                }
            }
        </select>
    </div>
    <div class="col-12">
        <button type="submit" class="btn btn-primary">Search</button>
        &nbsp
        <a asp-action="Index" class="btn btn-light">Clear search</a>
    </div>
</form>
<br />
<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Email)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Role)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelitem => item.Email)
				</td>
				<td>
					@Html.DisplayFor(modelitem => item.Role)
				</td>
				<td>
					<a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
				</td>
				<td>
					<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>
